{
  "name": "fuzzy",
  "description": "small, standalone fuzzy search / fuzzy filter. browser or node",
  "version": "0.1.0",
  "homepage": "https://github.com/myork/fuzzy",
  "author": {
    "name": "Matt York",
    "email": "york.matt@gmail.com",
    "url": "mattyork.org"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/myork/fuzzy.git"
  },
  "bugs": {
    "url": "https://github.com/myork/fuzzy/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/myork/fuzzy/blob/master/LICENSE-MIT"
    }
  ],
  "main": "lib/fuzzy",
  "engines": {
    "node": ">= 0.6.0"
  },
  "scripts": {
    "test": "make test"
  },
  "devDependencies": {
    "mocha": ">= 1.3.0",
    "chai": ">= 1.1.1",
    "underscore": ">= 1.3.3",
    "uglify-js": ">= 1.3.2",
    "jshint": ">= 0.7.1"
  },
  "keywords": [
    "fuzzy",
    "search",
    "filter"
  ],
  "readme": "# fuzzy\n\n1k standalone fuzzy search / fuzzy filter a la Textmate and Sublime Text's command-T fuzzy file search. Node or browser.\n\n## Get it\n\nNode:\n\n```bash\n$ npm install fuzzy\n$ node\n> var fuzzy = require('fuzzy');\n> console.log(fuzzy)\n{ test: [Function],\n  match: [Function],\n  filter: [Function] }\n```\n\nBrowser:\n\n```html\n<script src=\"/path/to/fuzzy.js\"></script>\n<script>\n  console.log(fuzzy);\n  // Object >\n  //   filter: function (pattern, arr, opts) {\n  //   match: function (pattern, string, opts) {\n  //   test: function (pattern, string) {\n</script>\n```\n\n## Use it\n\nPadawan: Simply filter an array of strings.\n\n```javascript\nvar list = ['baconing', 'narwhal', 'a mighty bear canoe'];\nvar results = fuzzy.filter('bcn', list)\nvar matches = results.map(function(el) { return el.string; });\nconsole.log(matches);\n// [ 'baconing', 'a mighty bear canoe' ]\n```\n\nJedi: Wrap matching characters in each string\n\n```javascript\nvar list = ['baconing', 'narwhal', 'a mighty bear canoe'];\nvar options = { pre: '<', post: '>' };\nvar results = fuzzy.filter('bcn', list, options)\nconsole.log(results);\n// [\n//   {string: '<b>a<c>o<n>ing'           , index: 0, score: 3, original: 'baconing'},\n//   {string: 'a mighty <b>ear <c>a<n>oe', index: 2, score: 3, original: 'a mighty bear canoe'}\n// ]\n```\n\nJedi Master: sometimes the array you give is not an array of strings. You can\npass in a function that creates the string to match against from each element\nin the given array\n\n```javascript\nvar list = [\n    {rompalu: 'baconing', zibbity: 'simba'}\n  , {rompalu: 'narwhal' , zibbity: 'mufasa'}\n  , {rompalu: 'a mighty bear canoe', zibbity: 'saddam hussein'}\n];\nvar options = {\n    pre: '<'\n  , post: '>'\n  , extract: function(el) { return el.rompalu; }\n};\nvar results = fuzzy.filter('bcn', list, options);\nvar matches = results.map(function(el) { return el.string; });\nconsole.log(matches);\n// [ '<b>a<c>o<n>ing', 'a mighty <b>ear <c>a<n>oe' ]\n```\n\n## Examples\nCheck out the html files in the examples directory\n\n## Documentation\nCode is well documented and the unit tests cover all functionality\n\n## Contributing\nFork the repo!\n\n    git clone <your_fork>\n    cd fuzzy\n    npm install -d\n    make\n\nAdd unit tests for any new or changed functionality. Lint, test, and minify using make, then shoot me a pull request.\n\n## Release History\nv0.1.0 - July 25, 2012\n\n## License\nCopyright (c) 2012 Matt York\nLicensed under the MIT license.\n",
  "_id": "fuzzy@0.1.0",
  "dist": {
    "shasum": "f9c8116df510969454ed9ab3824cdfb520eafc63",
    "tarball": "http://registry.npmjs.org/fuzzy/-/fuzzy-0.1.0.tgz"
  },
  "maintainers": [
    {
      "name": "mattyork",
      "email": "york.matt@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "f9c8116df510969454ed9ab3824cdfb520eafc63",
  "_from": "fuzzy@",
  "_resolved": "https://registry.npmjs.org/fuzzy/-/fuzzy-0.1.0.tgz"
}
